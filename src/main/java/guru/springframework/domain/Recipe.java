package guru.springframework.domain;

import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

@Getter
@Setter
@Entity
public class Recipe
{
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY) //autogenerated id
  private Long id;

  private String  description;
  private Integer prepTime;
  private Integer cookTime;
  private Integer servings;
  private String  source;
  private String  url;
  private String  directions;

  @Lob //created as BLOB in db
  private Byte[] image;

  @OneToOne(cascade = CascadeType.ALL) //if Recipe is deleted - all recipe notes are deleted
  private Notes notes;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "recipe") //relationship owner
  private Set<Ingredient> ingredients = new HashSet<>();

  @Enumerated(value = EnumType.STRING) //store String value in the database
  private Difficulty difficulty;

  @ManyToMany
  @JoinTable(name = "recipe_category",
      joinColumns = @JoinColumn(name = "recipe_id"),
      inverseJoinColumns = @JoinColumn(name = "category_id"))
  private Set<Category> categories = new HashSet<>();

  public void setNotes(Notes notes)
  {
    this.notes = notes;
    notes.setRecipe(this); //set relationship with Recipe
  }

  //helper method
  public Recipe addIngredient(Ingredient ingredient)
  {
    ingredient.setRecipe(this); //set relationship with Recipe
    this.ingredients.add(ingredient);
    return this;
  }
}
